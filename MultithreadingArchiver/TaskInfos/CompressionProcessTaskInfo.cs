///////////////////////////////////////////////////////////
//  CompressionProcessTaskInfo.cs
//  Implementation of the Class CompressionProcessTaskInfo
//  Generated by Enterprise Architect
//  Created on:      15-апр-2019 23:18:22
//  Original author: A7ttim
///////////////////////////////////////////////////////////

using System;
using System.IO;
using System.IO.Compression;

namespace MultithreadingArchiver
{
    /// <summary>
    /// Класс описания задачи сжатия
    /// </summary>
	class CompressionProcessTaskInfo : ITaskInfo
    {
        private Int64 _id;
        private byte[] _bytes;

		public CompressionProcessTaskInfo(Int64 id, byte[] bytes)
        { 
            _id = id;
            _bytes = bytes;
		}

        public object Execute(object obj)
        {
            // TODO: Здесь падение производительности, написать wrapper, который не позволяет закрыть поток
            using (MemoryStream memoryStream = new MemoryStream())
            {
                using (GZipStream compressStream = new GZipStream(memoryStream, CompressionLevel.Optimal))
                {
                    compressStream.Write(_bytes, 0, _bytes.Length);
                }
                return memoryStream.ToArray();
            }
        }

        public object GetData()
        {
            return _bytes;
        }

        public Int64 GetId()
        {
            return _id;
        }
    }
}